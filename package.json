{
  "name": "jsts",
  "description": "A JavaScript library of spatial predicates and functions for processing geometry",
  "version": "1.0.4",
  "author": "Bj√∂rn Harrtell <bjorn@wololo.org>",
  "keywords": [
    "JSTS",
    "JavaScript",
    "JTS",
    "Java",
    "Topology",
    "Geometry"
  ],
  "license": "(BSD-3-Clause OR EPL-1.0)",
  "format": "es6",
  "dependencies": {
  },
  "devDependencies": {
    "babel-cli": "6.6.5",
    "babel-plugin-transform-inline-environment-variables": "6.5.0",
    "babel-preset-es2015": "6.6.0",
    "babel-register": "6.6.5",
    "browserify": "13.0.0",
    "cheerio": "0.20.0",
    "expect.js": "0.3.1",
    "jsdoc": "jsdoc3/jsdoc",
    "mocha": "2.4.5",
    "rollup": "0.25.4",
    "rollup-plugin-commonjs": "2.2.1",
    "rollup-plugin-node-resolve": "1.4.0",
    "uglify-js": "2.6.2",
    "es6-collections": "0.5.5",
    "math-float64-exponent": "1.0.0",
    "math-float64-get-high-word": "1.0.0"
  },
  "main": "src/jsts.js",
  "engines": {
    "node": ">= 4"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bjornharrtell/jsts.git"
  },
  "standard": {
    "globals": [
      "describe",
      "it",
      "jsts",
      "ol"
    ]
  },
  "scripts": {
    "test": "NODE_PATH=src mocha --compilers js:babel-register --recursive test/auto/node test/manual",
    "build-jsdoc-es5": "rollup -c rollup.config.node.js > doc/jsts.js && jsdoc -c doc/es5.json",
    "build-node": "rollup -c rollup.config.node.js | GITHASH=$(git rev-parse --short HEAD) babel --presets es2015 --plugins transform-inline-environment-variables | uglifyjs -c -m --screw-ie8 | (cat license.txt && cat) > dist/jsts.min.js",
    "build-browser": "rollup -c rollup.config.browser.js | GITHASH=$(git rev-parse --short HEAD) babel --presets es2015 --plugins transform-inline-environment-variables | browserify - | uglifyjs -c -m --screw-ie8 | (cat license.txt && cat) > dist/jsts.min.js",
    "build-tests": "NODE_PATH=src browserify test/auto/browser/runner.js -o dist/tests.js -t [ babelify --presets [ es2015 ] ]"
  }
}
